<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableau_analysis_17014000557090' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Yes' caption='Show Normalized Probability' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <aliases>
          <alias key='false' value='No' />
          <alias key='true' value='Yes' />
        </aliases>
        <members>
          <member alias='Yes' value='true' />
          <member alias='No' value='false' />
        </members>
      </column>
      <column caption='Prompt Type 1' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='0'>
        <calculation class='tableau' formula='0' />
        <members>
          <member value='0' />
          <member value='3' />
          <member value='-1' />
        </members>
      </column>
      <column caption='Prompt Type 2' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='3.'>
        <calculation class='tableau' formula='3.' />
        <members>
          <member value='0.' />
          <member value='1.' />
          <member value='2.' />
          <member value='3.' />
          <member value='4.' />
        </members>
      </column>
    </datasource>
    <datasource caption='all_model_responses' inline='true' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_model_responses_cls' name='textscan.05eu1uc1d7n5d51c2qyio04vaqgv'>
            <connection class='textscan' directory='C:/Users/a2khatun/Desktop' filename='all_model_responses.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.05eu1uc1d7n5d51c2qyio04vaqgv' name='all_model_responses.csv2' table='[all_model_responses#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
            <column datatype='integer' name='index' ordinal='0' />
            <column datatype='string' name='text' ordinal='1' />
            <column datatype='string' name='tags' ordinal='2' />
            <column datatype='string' name='sub_tags' ordinal='3' />
            <column datatype='string' name='ground_truth' ordinal='4' />
            <column datatype='string' name='paper link' ordinal='5' />
            <column datatype='string' name='data_source' ordinal='6' />
            <column datatype='string' name='text_response' ordinal='7' />
            <column datatype='string' name='response' ordinal='8' />
            <column datatype='string' name='model' ordinal='9' />
            <column datatype='string' name='response_type' ordinal='10' />
            <column datatype='integer' name='prompt_type' ordinal='11' />
            <column datatype='real' name='text_response_prob' ordinal='12' />
            <column datatype='real' name='total_prob' ordinal='13' />
            <column datatype='real' name='normalized_text_response_prob' ordinal='14' />
            <column datatype='string' name='model_type' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.05eu1uc1d7n5d51c2qyio04vaqgv' name='all_model_responses.csv' table='[all_model_responses#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
              <column datatype='integer' name='index' ordinal='0' />
              <column datatype='string' name='text' ordinal='1' />
              <column datatype='string' name='tags' ordinal='2' />
              <column datatype='string' name='sub_tags' ordinal='3' />
              <column datatype='string' name='ground_truth' ordinal='4' />
              <column datatype='string' name='paper link' ordinal='5' />
              <column datatype='string' name='data_source' ordinal='6' />
              <column datatype='string' name='text_response' ordinal='7' />
              <column datatype='string' name='response' ordinal='8' />
              <column datatype='string' name='model' ordinal='9' />
              <column datatype='string' name='response_type' ordinal='10' />
              <column datatype='integer' name='prompt_type' ordinal='11' />
              <column datatype='real' name='text_response_prob' ordinal='12' />
              <column datatype='real' name='total_prob' ordinal='13' />
              <column datatype='real' name='normalized_text_response_prob' ordinal='14' />
              <column datatype='string' name='model_type' ordinal='15' />
            </columns>
          </relation>
          <relation connection='textscan.05eu1uc1d7n5d51c2qyio04vaqgv' name='all_model_responses.csv2' table='[all_model_responses#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
              <column datatype='integer' name='index' ordinal='0' />
              <column datatype='string' name='text' ordinal='1' />
              <column datatype='string' name='tags' ordinal='2' />
              <column datatype='string' name='sub_tags' ordinal='3' />
              <column datatype='string' name='ground_truth' ordinal='4' />
              <column datatype='string' name='paper link' ordinal='5' />
              <column datatype='string' name='data_source' ordinal='6' />
              <column datatype='string' name='text_response' ordinal='7' />
              <column datatype='string' name='response' ordinal='8' />
              <column datatype='string' name='model' ordinal='9' />
              <column datatype='string' name='response_type' ordinal='10' />
              <column datatype='integer' name='prompt_type' ordinal='11' />
              <column datatype='real' name='text_response_prob' ordinal='12' />
              <column datatype='real' name='total_prob' ordinal='13' />
              <column datatype='real' name='normalized_text_response_prob' ordinal='14' />
              <column datatype='string' name='model_type' ordinal='15' />
            </columns>
          </relation>
          <relation connection='textscan.05eu1uc1d7n5d51c2qyio04vaqgv' name='all_model_responses.csv1' table='[all_model_responses#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
              <column datatype='integer' name='index' ordinal='0' />
              <column datatype='string' name='text' ordinal='1' />
              <column datatype='string' name='tags' ordinal='2' />
              <column datatype='string' name='sub_tags' ordinal='3' />
              <column datatype='string' name='ground_truth' ordinal='4' />
              <column datatype='string' name='paper link' ordinal='5' />
              <column datatype='string' name='data_source' ordinal='6' />
              <column datatype='string' name='text_response' ordinal='7' />
              <column datatype='string' name='response' ordinal='8' />
              <column datatype='string' name='model' ordinal='9' />
              <column datatype='string' name='response_type' ordinal='10' />
              <column datatype='integer' name='prompt_type' ordinal='11' />
              <column datatype='real' name='text_response_prob' ordinal='12' />
              <column datatype='real' name='total_prob' ordinal='13' />
              <column datatype='real' name='normalized_text_response_prob' ordinal='14' />
              <column datatype='string' name='model_type' ordinal='15' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[data_source (all_model_responses.csv1)]' value='[all_model_responses.csv1].[data_source]' />
          <map key='[data_source (all_model_responses.csv2)]' value='[all_model_responses.csv2].[data_source]' />
          <map key='[data_source]' value='[all_model_responses.csv].[data_source]' />
          <map key='[ground_truth (all_model_responses.csv1)]' value='[all_model_responses.csv1].[ground_truth]' />
          <map key='[ground_truth (all_model_responses.csv2)]' value='[all_model_responses.csv2].[ground_truth]' />
          <map key='[ground_truth]' value='[all_model_responses.csv].[ground_truth]' />
          <map key='[index (all_model_responses.csv1)]' value='[all_model_responses.csv1].[index]' />
          <map key='[index (all_model_responses.csv2)]' value='[all_model_responses.csv2].[index]' />
          <map key='[index]' value='[all_model_responses.csv].[index]' />
          <map key='[model (all_model_responses.csv1)]' value='[all_model_responses.csv1].[model]' />
          <map key='[model (all_model_responses.csv2)]' value='[all_model_responses.csv2].[model]' />
          <map key='[model]' value='[all_model_responses.csv].[model]' />
          <map key='[model_type (all_model_responses.csv1)]' value='[all_model_responses.csv1].[model_type]' />
          <map key='[model_type (all_model_responses.csv2)]' value='[all_model_responses.csv2].[model_type]' />
          <map key='[model_type]' value='[all_model_responses.csv].[model_type]' />
          <map key='[normalized_text_response_prob (all_model_responses.csv1)]' value='[all_model_responses.csv1].[normalized_text_response_prob]' />
          <map key='[normalized_text_response_prob (all_model_responses.csv2)]' value='[all_model_responses.csv2].[normalized_text_response_prob]' />
          <map key='[normalized_text_response_prob]' value='[all_model_responses.csv].[normalized_text_response_prob]' />
          <map key='[paper link (all_model_responses.csv1)]' value='[all_model_responses.csv1].[paper link]' />
          <map key='[paper link (all_model_responses.csv2)]' value='[all_model_responses.csv2].[paper link]' />
          <map key='[paper link]' value='[all_model_responses.csv].[paper link]' />
          <map key='[prompt_type (all_model_responses.csv1)]' value='[all_model_responses.csv1].[prompt_type]' />
          <map key='[prompt_type (all_model_responses.csv2)]' value='[all_model_responses.csv2].[prompt_type]' />
          <map key='[prompt_type]' value='[all_model_responses.csv].[prompt_type]' />
          <map key='[response (all_model_responses.csv1)]' value='[all_model_responses.csv1].[response]' />
          <map key='[response (all_model_responses.csv2)]' value='[all_model_responses.csv2].[response]' />
          <map key='[response]' value='[all_model_responses.csv].[response]' />
          <map key='[response_type (all_model_responses.csv1)]' value='[all_model_responses.csv1].[response_type]' />
          <map key='[response_type (all_model_responses.csv2)]' value='[all_model_responses.csv2].[response_type]' />
          <map key='[response_type]' value='[all_model_responses.csv].[response_type]' />
          <map key='[sub_tags (all_model_responses.csv1)]' value='[all_model_responses.csv1].[sub_tags]' />
          <map key='[sub_tags (all_model_responses.csv2)]' value='[all_model_responses.csv2].[sub_tags]' />
          <map key='[sub_tags]' value='[all_model_responses.csv].[sub_tags]' />
          <map key='[tags (all_model_responses.csv1)]' value='[all_model_responses.csv1].[tags]' />
          <map key='[tags (all_model_responses.csv2)]' value='[all_model_responses.csv2].[tags]' />
          <map key='[tags]' value='[all_model_responses.csv].[tags]' />
          <map key='[text (all_model_responses.csv1)]' value='[all_model_responses.csv1].[text]' />
          <map key='[text (all_model_responses.csv2)]' value='[all_model_responses.csv2].[text]' />
          <map key='[text]' value='[all_model_responses.csv].[text]' />
          <map key='[text_response (all_model_responses.csv1)]' value='[all_model_responses.csv1].[text_response]' />
          <map key='[text_response (all_model_responses.csv2)]' value='[all_model_responses.csv2].[text_response]' />
          <map key='[text_response]' value='[all_model_responses.csv].[text_response]' />
          <map key='[text_response_prob (all_model_responses.csv1)]' value='[all_model_responses.csv1].[text_response_prob]' />
          <map key='[text_response_prob (all_model_responses.csv2)]' value='[all_model_responses.csv2].[text_response_prob]' />
          <map key='[text_response_prob]' value='[all_model_responses.csv].[text_response_prob]' />
          <map key='[total_prob (all_model_responses.csv1)]' value='[all_model_responses.csv1].[total_prob]' />
          <map key='[total_prob (all_model_responses.csv2)]' value='[all_model_responses.csv2].[total_prob]' />
          <map key='[total_prob]' value='[all_model_responses.csv].[total_prob]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;\&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;\&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;\&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sub_tags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sub_tags]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>sub_tags</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_truth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ground_truth]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>ground_truth</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[paper link]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>paper link</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>data_source</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text_response]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>text_response</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>response</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response_type]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>response_type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prompt_type</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prompt_type]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>prompt_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_response_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[text_response_prob]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>text_response_prob</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_prob]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>total_prob</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_text_response_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_text_response_prob]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>normalized_text_response_prob</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model_type]</local-name>
            <parent-name>[all_model_responses.csv]</parent-name>
            <remote-alias>model_type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tags (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sub_tags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sub_tags (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>sub_tags</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_truth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ground_truth (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>ground_truth</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[paper link (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>paper link</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>data_source</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text_response (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>text_response</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>response</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response_type (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>response_type</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prompt_type</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prompt_type (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>prompt_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_response_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[text_response_prob (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>text_response_prob</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_prob (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>total_prob</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_text_response_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_text_response_prob (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>normalized_text_response_prob</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model_type (all_model_responses.csv2)]</local-name>
            <parent-name>[all_model_responses.csv2]</parent-name>
            <remote-alias>model_type</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tags (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sub_tags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sub_tags (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>sub_tags</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_truth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ground_truth (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>ground_truth</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[paper link (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>paper link</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>data_source</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text_response (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>text_response</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>response</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response_type (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>response_type</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prompt_type</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prompt_type (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>prompt_type</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_response_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[text_response_prob (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>text_response_prob</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_prob (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>total_prob</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>normalized_text_response_prob</remote-name>
            <remote-type>5</remote-type>
            <local-name>[normalized_text_response_prob (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>normalized_text_response_prob</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model_type (all_model_responses.csv1)]</local-name>
            <parent-name>[all_model_responses.csv1]</parent-name>
            <remote-alias>model_type</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Prompt Type 1' datatype='integer' name='[Calculation_313281698924376065]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [prompt_type] == [Parameters].[Parameter 2]&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Probability' datatype='real' name='[Calculation_410390544238768129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = TRUE&#13;&#10;THEN [normalized_text_response_prob]&#13;&#10;ELSE [text_response_prob]&#13;&#10;END' />
      </column>
      <column caption='Probability_2' datatype='real' name='[Probability (copy)_410390544243863555]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = TRUE&#13;&#10;THEN [normalized_text_response_prob (all_model_responses.csv1)]&#13;&#10;ELSE [text_response_prob (all_model_responses.csv1)]&#13;&#10;END' />
      </column>
      <column caption='Prompt Type 2' datatype='integer' name='[Prompt Type 1 (copy)_313281698925002754]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [prompt_type] == [Parameters].[Parameter 3]&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cross_in_RT_and_PT' datatype='table' name='[__tableau_internal_object_id__].[all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='all_model_responses' datatype='table' name='[__tableau_internal_object_id__].[all_model_responses.csv_291864322FED40BF9B973D6130225C28]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cross_in_models' datatype='table' name='[__tableau_internal_object_id__].[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[choices_list]' role='dimension' type='nominal' />
      <column caption='Data Source (All Model Responses.Csv1)' datatype='string' name='[data_source (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Data Source (All Model Responses.Csv2)' datatype='string' name='[data_source (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
      <column caption='Ground Truth (All Model Responses.Csv1)' datatype='string' name='[ground_truth (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Ground Truth (All Model Responses.Csv2)' datatype='string' name='[ground_truth (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Ground Truth' datatype='string' name='[ground_truth]' role='dimension' type='nominal' />
      <column caption='Index (All Model Responses.Csv1)' datatype='integer' name='[index (all_model_responses.csv1)]' role='measure' type='quantitative' />
      <column caption='Index (All Model Responses.Csv2)' datatype='integer' name='[index (all_model_responses.csv2)]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[logprobs]' role='dimension' type='nominal' />
      <column caption='Model 2' datatype='string' name='[model (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Model (All Model Responses.Csv2)' datatype='string' name='[model (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column caption='Model Type (All Model Responses.Csv2)' datatype='string' name='[model_type (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Normalized Text Response Prob (All Model Responses.Csv2)' datatype='real' name='[normalized_text_response_prob (all_model_responses.csv2)]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[original_response_trimmed]' role='dimension' type='nominal' />
      <column caption='Original Text Response' datatype='string' hidden='true' name='[original_text_response]' role='dimension' type='nominal' />
      <column caption='Paper Link (All Model Responses.Csv1)' datatype='string' name='[paper link (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Paper Link (All Model Responses.Csv2)' datatype='string' name='[paper link (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Paper Link' datatype='string' name='[paper link]' role='dimension' type='nominal' />
      <column caption='Prompt' datatype='string' hidden='true' name='[prompt]' role='dimension' type='nominal' />
      <column caption='Prompt Type (All Model Responses.Csv1)' datatype='integer' name='[prompt_type (all_model_responses.csv1)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Prompt Type (All Model Responses.Csv2)' datatype='integer' name='[prompt_type (all_model_responses.csv2)]' role='dimension' type='ordinal' />
      <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
      <column caption='Response (All Model Responses.Csv2)' datatype='string' name='[response (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[response_trimmed]' role='dimension' type='nominal' />
      <column caption='Response Type (All Model Responses.Csv1)' datatype='string' name='[response_type (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Response Type (All Model Responses.Csv2)' datatype='string' name='[response_type (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
      <column caption='Sub Tags (All Model Responses.Csv1)' datatype='string' name='[sub_tags (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Sub Tags (All Model Responses.Csv2)' datatype='string' name='[sub_tags (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Sub Tags' datatype='string' name='[sub_tags]' role='dimension' type='nominal' />
      <column caption='Tags (All Model Responses.Csv1)' datatype='string' name='[tags (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Tags (All Model Responses.Csv2)' datatype='string' name='[tags (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
      <column caption='Text (All Model Responses.Csv1)' datatype='string' name='[text (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Text (All Model Responses.Csv2)' datatype='string' name='[text (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
      <column caption='Text Response (Model 2)' datatype='string' name='[text_response (all_model_responses.csv1)]' role='dimension' type='nominal' />
      <column caption='Text Response (All Model Responses.Csv2)' datatype='string' name='[text_response (all_model_responses.csv2)]' role='dimension' type='nominal' />
      <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
      <column caption='Text Response Prob (All Model Responses.Csv1)' datatype='real' name='[text_response_prob (all_model_responses.csv1)]' role='measure' type='quantitative' />
      <column caption='Text Response Prob (All Model Responses.Csv2)' datatype='real' name='[text_response_prob (all_model_responses.csv2)]' role='measure' type='quantitative' />
      <column caption='Text Response Prob' datatype='real' name='[text_response_prob]' role='dimension' type='ordinal' />
      <column caption='Text W Input' datatype='string' hidden='true' name='[text_w_input]' role='dimension' type='nominal' />
      <column caption='Total Prob (All Model Responses.Csv2)' datatype='real' name='[total_prob (all_model_responses.csv2)]' role='measure' type='quantitative' />
      <column-instance column='[model]' derivation='Attribute' name='[attr:model:nk]' pivot='key' type='nominal' />
      <column-instance column='[text_response]' derivation='Count' name='[cnt:text_response:qk]' pivot='key' type='quantitative' />
      <column-instance column='[model]' derivation='Min' name='[min:model:nk]' pivot='key' type='nominal' />
      <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
      <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
      <column-instance column='[text_response (all_model_responses.csv1)]' derivation='None' name='[none:text_response (all_model_responses.csv1):nk]' pivot='key' type='nominal' />
      <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
      <column-instance column='[text_response_prob]' derivation='None' name='[none:text_response_prob:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_313281698924376065]' derivation='Sum' name='[sum:Calculation_313281698924376065:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Prompt Type 1 (copy)_313281698925002754]' derivation='Sum' name='[sum:Prompt Type 1 (copy)_313281698925002754:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Prompt Type,Text Response,Text Response Prob)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:prompt_type:ok]' />
          <groupfilter function='level-members' level='[none:text_response:nk]' />
          <groupfilter function='level-members' level='[none:text_response_prob:qk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/User/Documents/My Tableau Repository/Datasources/all_model_responses.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='01/18/2024 03:35:56 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='all_model_responses.csv_291864322FED40BF9B973D6130225C28' table='[Extract].[all_model_responses.csv_291864322FED40BF9B973D6130225C28]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='all_model_responses.csv_291864322FED40BF9B973D6130225C28' table='[Extract].[all_model_responses.csv_291864322FED40BF9B973D6130225C28]' type='table' />
            <relation name='all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9' table='[Extract].[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[data_source (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[data_source]' />
            <map key='[data_source]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[data_source]' />
            <map key='[ground_truth (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[ground_truth]' />
            <map key='[ground_truth]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[ground_truth]' />
            <map key='[index (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[index]' />
            <map key='[index]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[index]' />
            <map key='[model (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[model]' />
            <map key='[model]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[model]' />
            <map key='[model_type (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[model_type]' />
            <map key='[model_type]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[model_type]' />
            <map key='[normalized_text_response_prob (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[normalized_text_response_prob]' />
            <map key='[normalized_text_response_prob]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[normalized_text_response_prob]' />
            <map key='[paper link (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[paper link]' />
            <map key='[paper link]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[paper link]' />
            <map key='[prompt_type (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[prompt_type]' />
            <map key='[prompt_type]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[prompt_type]' />
            <map key='[response (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[response]' />
            <map key='[response]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[response]' />
            <map key='[response_type (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[response_type]' />
            <map key='[response_type]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[response_type]' />
            <map key='[sub_tags (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[sub_tags]' />
            <map key='[sub_tags]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[sub_tags]' />
            <map key='[tags (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[tags]' />
            <map key='[tags]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[tags]' />
            <map key='[text (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[text]' />
            <map key='[text]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[text]' />
            <map key='[text_response (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[text_response]' />
            <map key='[text_response]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[text_response]' />
            <map key='[text_response_prob (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[text_response_prob]' />
            <map key='[text_response_prob]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[text_response_prob]' />
            <map key='[total_prob (all_model_responses.csv1)]' value='[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9].[total_prob]' />
            <map key='[total_prob]' value='[all_model_responses.csv_291864322FED40BF9B973D6130225C28].[total_prob]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='all_model_responses' increment-value='%null%' refresh-type='create' rows-inserted='1787700' timestamp-start='2024-01-18 03:35:43.712' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>index</remote-name>
              <remote-type>20</remote-type>
              <local-name>[index]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>index</remote-alias>
              <ordinal>0</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1257</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[text]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>text</remote-alias>
              <ordinal>1</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1257</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tags</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tags]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>tags</remote-alias>
              <ordinal>2</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sub_tags</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sub_tags]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>sub_tags</remote-alias>
              <ordinal>3</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>59</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ground_truth</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ground_truth]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>ground_truth</remote-alias>
              <ordinal>4</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>paper link</remote-name>
              <remote-type>129</remote-type>
              <local-name>[paper link]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>paper link</remote-alias>
              <ordinal>5</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>186</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data_source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[data_source]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>data_source</remote-alias>
              <ordinal>6</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>text_response</remote-name>
              <remote-type>129</remote-type>
              <local-name>[text_response]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>text_response</remote-alias>
              <ordinal>7</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>response</remote-name>
              <remote-type>129</remote-type>
              <local-name>[response]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>response</remote-alias>
              <ordinal>8</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40836</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[model]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>model</remote-alias>
              <ordinal>9</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>response_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[response_type]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>response_type</remote-alias>
              <ordinal>10</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prompt_type</remote-name>
              <remote-type>20</remote-type>
              <local-name>[prompt_type]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>prompt_type</remote-alias>
              <ordinal>11</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>text_response_prob</remote-name>
              <remote-type>5</remote-type>
              <local-name>[text_response_prob]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>text_response_prob</remote-alias>
              <ordinal>12</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>392682</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_prob</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_prob]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>total_prob</remote-alias>
              <ordinal>13</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>480406</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_text_response_prob</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_text_response_prob]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>normalized_text_response_prob</remote-alias>
              <ordinal>14</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>480406</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>model_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[model_type]</local-name>
              <parent-name>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</parent-name>
              <remote-alias>model_type</remote-alias>
              <ordinal>15</ordinal>
              <family>all_model_responses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_291864322FED40BF9B973D6130225C28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>index</remote-name>
              <remote-type>20</remote-type>
              <local-name>[index (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>index</remote-alias>
              <ordinal>16</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1244</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[text (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>text</remote-alias>
              <ordinal>17</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tags</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tags (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>tags</remote-alias>
              <ordinal>18</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sub_tags</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sub_tags (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>sub_tags</remote-alias>
              <ordinal>19</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ground_truth</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ground_truth (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>ground_truth</remote-alias>
              <ordinal>20</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>paper link</remote-name>
              <remote-type>129</remote-type>
              <local-name>[paper link (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>paper link</remote-alias>
              <ordinal>21</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>186</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data_source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[data_source (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>data_source</remote-alias>
              <ordinal>22</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>text_response</remote-name>
              <remote-type>129</remote-type>
              <local-name>[text_response (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>text_response</remote-alias>
              <ordinal>23</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>response</remote-name>
              <remote-type>129</remote-type>
              <local-name>[response (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>response</remote-alias>
              <ordinal>24</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>39069</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[model (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>model</remote-alias>
              <ordinal>25</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>response_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[response_type (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>response_type</remote-alias>
              <ordinal>26</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prompt_type</remote-name>
              <remote-type>20</remote-type>
              <local-name>[prompt_type (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>prompt_type</remote-alias>
              <ordinal>27</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>text_response_prob</remote-name>
              <remote-type>5</remote-type>
              <local-name>[text_response_prob (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>text_response_prob</remote-alias>
              <ordinal>28</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>451201</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_prob</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_prob (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>total_prob</remote-alias>
              <ordinal>29</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>476107</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>normalized_text_response_prob</remote-name>
              <remote-type>5</remote-type>
              <local-name>[normalized_text_response_prob (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>normalized_text_response_prob</remote-alias>
              <ordinal>30</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>476107</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>model_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[model_type (all_model_responses.csv1)]</local-name>
              <parent-name>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</parent-name>
              <remote-alias>model_type</remote-alias>
              <ordinal>31</ordinal>
              <family>all_model_responses.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.894389' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.105611' rowDisplayCount='10000' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:model:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bigscience--bloom-7b1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;huggyllama--llama-7b&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;gpt-4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;meta-llama--Llama-2-7b-hf&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gpt-3.5-turbo&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;meta-llama--Llama-2-7b-chat-hf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EleutherAI--pythia-6.9b-deduped&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;text-davinci-003&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:text_response (all_model_responses.csv1):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Neither&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YES&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:model:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bigscience--bloom-7b1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;huggyllama--llama-7b&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;gpt-4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;meta-llama--Llama-2-7b-hf&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gpt-3.5-turbo&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;meta-llama--Llama-2-7b-chat-hf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EleutherAI--pythia-6.9b-deduped&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;text-davinci-003&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:model:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bigscience--bloom-7b1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;huggyllama--llama-7b&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;gpt-4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;meta-llama--Llama-2-7b-hf&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gpt-3.5-turbo&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;meta-llama--Llama-2-7b-chat-hf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EleutherAI--pythia-6.9b-deduped&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;text-davinci-003&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:text_response:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;C&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;C&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Neither&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Neither&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;A&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;A&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Yes&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Yes&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;YES&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:Text Response (copy)_313281698921918464:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;YES&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;YES&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;YES&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;YES&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]:1&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Bad Output&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Bad Output&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;B&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;B&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;No&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;No&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;NO&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:Text Response (copy)_313281698921918464:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;NO&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;NO&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;NO&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;D&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;D&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;NO&quot;</bucket>
                <bucket>&quot;[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]:1&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:text_response:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Neither&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YES&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;B__fixed&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bad Output&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Bad Ouput&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A__fixed&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='index' />
        <field-sort-custom-order field='text' />
        <field-sort-custom-order field='tags' />
        <field-sort-custom-order field='sub_tags' />
        <field-sort-custom-order field='ground_truth' />
        <field-sort-custom-order field='paper link' />
        <field-sort-custom-order field='data_source' />
        <field-sort-custom-order field='text_response' />
        <field-sort-custom-order field='Text Response (copy)_313281698921918464' />
        <field-sort-custom-order field='text_response_prob' />
        <field-sort-custom-order field='Calculation_929711912740937731' />
        <field-sort-custom-order field='Calculation_929711912740851714' />
        <field-sort-custom-order field='Calculation_929711912740757505' />
        <field-sort-custom-order field='prompt' />
        <field-sort-custom-order field='model' />
        <field-sort-custom-order field='Calculation_929711912750260229' />
        <field-sort-custom-order field='Calculation_929711912750190596' />
        <field-sort-custom-order field='response_type' />
        <field-sort-custom-order field='prompt_type' />
        <field-sort-custom-order field='original_text_response' />
        <field-sort-custom-order field='text_w_input' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Yes' caption='Show Normalized Probability' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
          <aliases>
            <alias key='false' value='No' />
            <alias key='true' value='Yes' />
          </aliases>
        </column>
        <column caption='Prompt Type 1' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='0'>
          <calculation class='tableau' formula='0' />
        </column>
        <column caption='Prompt Type 2' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='3.'>
          <calculation class='tableau' formula='3.' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cross_in_RT_and_PT' id='all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A'>
            <properties context=''>
              <relation connection='textscan.05eu1uc1d7n5d51c2qyio04vaqgv' name='all_model_responses.csv2' table='[all_model_responses#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
                  <column datatype='integer' name='index' ordinal='0' />
                  <column datatype='string' name='text' ordinal='1' />
                  <column datatype='string' name='tags' ordinal='2' />
                  <column datatype='string' name='sub_tags' ordinal='3' />
                  <column datatype='string' name='ground_truth' ordinal='4' />
                  <column datatype='string' name='paper link' ordinal='5' />
                  <column datatype='string' name='data_source' ordinal='6' />
                  <column datatype='string' name='text_response' ordinal='7' />
                  <column datatype='string' name='response' ordinal='8' />
                  <column datatype='string' name='model' ordinal='9' />
                  <column datatype='string' name='response_type' ordinal='10' />
                  <column datatype='integer' name='prompt_type' ordinal='11' />
                  <column datatype='real' name='text_response_prob' ordinal='12' />
                  <column datatype='real' name='total_prob' ordinal='13' />
                  <column datatype='real' name='normalized_text_response_prob' ordinal='14' />
                  <column datatype='string' name='model_type' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='all_model_responses' id='all_model_responses.csv_291864322FED40BF9B973D6130225C28'>
            <properties context=''>
              <relation connection='textscan.05eu1uc1d7n5d51c2qyio04vaqgv' name='all_model_responses.csv' table='[all_model_responses#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
                  <column datatype='integer' name='index' ordinal='0' />
                  <column datatype='string' name='text' ordinal='1' />
                  <column datatype='string' name='tags' ordinal='2' />
                  <column datatype='string' name='sub_tags' ordinal='3' />
                  <column datatype='string' name='ground_truth' ordinal='4' />
                  <column datatype='string' name='paper link' ordinal='5' />
                  <column datatype='string' name='data_source' ordinal='6' />
                  <column datatype='string' name='text_response' ordinal='7' />
                  <column datatype='string' name='response' ordinal='8' />
                  <column datatype='string' name='model' ordinal='9' />
                  <column datatype='string' name='response_type' ordinal='10' />
                  <column datatype='integer' name='prompt_type' ordinal='11' />
                  <column datatype='real' name='text_response_prob' ordinal='12' />
                  <column datatype='real' name='total_prob' ordinal='13' />
                  <column datatype='real' name='normalized_text_response_prob' ordinal='14' />
                  <column datatype='string' name='model_type' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='all_model_responses.csv_291864322FED40BF9B973D6130225C28' table='[Extract].[all_model_responses.csv_291864322FED40BF9B973D6130225C28]' type='table' />
            </properties>
          </object>
          <object caption='cross_in_models' id='all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9'>
            <properties context=''>
              <relation connection='textscan.05eu1uc1d7n5d51c2qyio04vaqgv' name='all_model_responses.csv1' table='[all_model_responses#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
                  <column datatype='integer' name='index' ordinal='0' />
                  <column datatype='string' name='text' ordinal='1' />
                  <column datatype='string' name='tags' ordinal='2' />
                  <column datatype='string' name='sub_tags' ordinal='3' />
                  <column datatype='string' name='ground_truth' ordinal='4' />
                  <column datatype='string' name='paper link' ordinal='5' />
                  <column datatype='string' name='data_source' ordinal='6' />
                  <column datatype='string' name='text_response' ordinal='7' />
                  <column datatype='string' name='response' ordinal='8' />
                  <column datatype='string' name='model' ordinal='9' />
                  <column datatype='string' name='response_type' ordinal='10' />
                  <column datatype='integer' name='prompt_type' ordinal='11' />
                  <column datatype='real' name='text_response_prob' ordinal='12' />
                  <column datatype='real' name='total_prob' ordinal='13' />
                  <column datatype='real' name='normalized_text_response_prob' ordinal='14' />
                  <column datatype='string' name='model_type' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9' table='[Extract].[all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[index]' />
                <expression op='[index (all_model_responses.csv2)]' />
              </expression>
              <expression op='='>
                <expression op='[model]' />
                <expression op='[model (all_model_responses.csv2)]' />
              </expression>
              <expression op='='>
                <expression op='[model_type]' />
                <expression op='[model_type (all_model_responses.csv2)]' />
              </expression>
            </expression>
            <first-end-point object-id='all_model_responses.csv_291864322FED40BF9B973D6130225C28' />
            <second-end-point object-id='all_model_responses.csv_014B2C72E2F141EDAF819F4D8761857A' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[index]' />
                <expression op='[index (all_model_responses.csv1)]' />
              </expression>
              <expression op='='>
                <expression op='[prompt_type]' />
                <expression op='[prompt_type (all_model_responses.csv1)]' />
              </expression>
              <expression op='='>
                <expression op='[response_type]' />
                <expression op='[response_type (all_model_responses.csv1)]' />
              </expression>
            </expression>
            <first-end-point object-id='all_model_responses.csv_291864322FED40BF9B973D6130225C28' />
            <second-end-point object-id='all_model_responses.csv_30B76D763BFD4AAF9F7B16E8C11943C9' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_DA78F10307D3401E9EA3763CC11BD387]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 1a' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Text Response' />
        <param name='target' value='Sheet 1a' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1a'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Token responses comparison across model</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column-instance column='[text_response]' derivation='Count' name='[cnt:text_response:qk]' pivot='key' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mistral-7B-v0.1&quot;</bucket>
              <bucket>&quot;Mistral-7B-OpenOrca&quot;</bucket>
              <bucket>&quot;zephyr-7b-alpha&quot;</bucket>
              <bucket>&quot;Mistral-7B-Instruct-v0.1&quot;</bucket>
              <bucket>&quot;vicuna-7b-v1.5&quot;</bucket>
              <bucket>&quot;Synthia-7B&quot;</bucket>
              <bucket>&quot;Llama-2-7b-hf&quot;</bucket>
              <bucket>&quot;Llama-2-7b-chat-hf&quot;</bucket>
              <bucket>&quot;WizardMath-7B-V1.0&quot;</bucket>
              <bucket>&quot;pygmalion-7b&quot;</bucket>
              <bucket>&quot;mpt-7b-instruct&quot;</bucket>
              <bucket>&quot;open_llama_7b_v2&quot;</bucket>
              <bucket>&quot;falcon-7b&quot;</bucket>
              <bucket>&quot;falcon-7b-instruct&quot;</bucket>
              <bucket>&quot;RedPajama-INCITE-7B-Instruct&quot;</bucket>
              <bucket>&quot;bloomz-7b1-mt&quot;</bucket>
              <bucket>&quot;RedPajama-INCITE-7B-Base&quot;</bucket>
              <bucket>&quot;open_llama_3b_v2&quot;</bucket>
              <bucket>&quot;gpt-j-6b&quot;</bucket>
              <bucket>&quot;pythia-6.9b-deduped&quot;</bucket>
              <bucket>&quot;dolly-v2-7b&quot;</bucket>
              <bucket>&quot;h2ogpt-oig-oasst1-512-6_9b&quot;</bucket>
              <bucket>&quot;pygmalion-6b&quot;</bucket>
              <bucket>&quot;gpt-neo-2.7B&quot;</bucket>
              <bucket>&quot;opt-iml-max-1.3b&quot;</bucket>
              <bucket>&quot;dolly-v2-3b&quot;</bucket>
              <bucket>&quot;dolly-v2-12b&quot;</bucket>
              <bucket>&quot;Llama-2-13b-chat-hf&quot;</bucket>
              <bucket>&quot;Synthia-13B&quot;</bucket>
              <bucket>&quot;Stable-Platypus2-13B&quot;</bucket>
              <bucket>&quot;opt-iml-max-30b&quot;</bucket>
              <bucket>&quot;text-davinci-003&quot;</bucket>
              <bucket>&quot;gpt-3.5-turbo&quot;</bucket>
              <bucket>&quot;gpt-4&quot;</bucket>
              <bucket>&quot;gpt-4-1106-preview&quot;</bucket>
              <bucket>&quot;Llama-2-70b-chat-hf&quot;</bucket>
              <bucket>&quot;Platypus2-70B-instruct&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='member' level='[none:prompt_type:ok]' member='0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='level-members' level='[none:text_response:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Bad Output&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]' value='76' />
            <format attr='title' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]' scope='rows' value='Response Count' />
            <format attr='auto-subtitle' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]' scope='rows' value='Number of responses across prompts' />
            <format attr='height' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='56' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='47' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='596' />
                <format attr='maxheight' value='596' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]</rows>
        <cols>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk] / [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk])</cols>
      </table>
      <simple-id uuid='{10497864-4B06-4EB1-9643-814BCDDFF1CA}' />
    </worksheet>
    <worksheet name='Sheet 1b'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Token responses comparison across response type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column-instance column='[text_response]' derivation='Count' name='[cnt:text_response:qk]' pivot='key' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='member' level='[none:prompt_type:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='level-members' level='[none:response_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2_options&quot;</bucket>
              <bucket>&quot;3_options&quot;</bucket>
              <bucket>&quot;4_options&quot;</bucket>
              <bucket>&quot;4_options/randomized&quot;</bucket>
              <bucket>&quot;4_options/option_probs&quot;</bucket>
              <bucket>&quot;4_options/randomized/option_probs&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='level-members' level='[none:text_response:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Neither&quot;</bucket>
              <bucket>&quot;YES&quot;</bucket>
              <bucket>&quot;NO&quot;</bucket>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;Bad Output&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]' value='76' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='44' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]</rows>
        <cols>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk] / [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk])</cols>
      </table>
      <simple-id uuid='{4CD666DF-285E-48AE-B144-CCB745118510}' />
    </worksheet>
    <worksheet name='Sheet 1c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Token responses comparison across prompt types</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column-instance column='[text_response]' derivation='Count' name='[cnt:text_response:qk]' pivot='key' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='member' level='[none:model:nk]' member='&quot;Platypus2-70B-instruct&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options/randomized&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='level-members' level='[none:text_response:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Neither&quot;</bucket>
              <bucket>&quot;YES&quot;</bucket>
              <bucket>&quot;NO&quot;</bucket>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;Bad Output&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]' field-type='quantitative' max='1000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]</rows>
        <cols>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok] / [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk])</cols>
      </table>
      <simple-id uuid='{3B40C5DD-D230-45E8-B564-452A9E5CE8C7}' />
    </worksheet>
    <worksheet name='Sheet 1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Token responses comparison across categories</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column-instance column='[text_response]' derivation='Count' name='[cnt:text_response:qk]' pivot='key' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='member' level='[none:model:nk]' member='&quot;Platypus2-70B-instruct&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='member' level='[none:prompt_type:ok]' member='0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Fact&quot;</bucket>
              <bucket>&quot;Conspiracy&quot;</bucket>
              <bucket>&quot;Controversy&quot;</bucket>
              <bucket>&quot;Misconception&quot;</bucket>
              <bucket>&quot;Stereotype&quot;</bucket>
              <bucket>&quot;Fiction&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='level-members' level='[none:text_response:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Neither&quot;</bucket>
              <bucket>&quot;YES&quot;</bucket>
              <bucket>&quot;NO&quot;</bucket>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;Bad Output&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]' field-type='quantitative' max='270' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='42' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' value='Response Type 2'>
              <formatted-text>
                <run>Response Type 2</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[cnt:text_response:qk]</rows>
        <cols>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk] / [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk])</cols>
      </table>
      <simple-id uuid='{46F4426B-BDB9-4A09-B878-3A0A3C6351C4}' />
    </worksheet>
    <worksheet name='Sheet 1e'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Token responses comparison between two prompt across categories </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Prompt Type 1' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Prompt Type 2' datatype='real' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='3.'>
              <calculation class='tableau' formula='3.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column caption='Prompt Type 1' datatype='integer' name='[Calculation_313281698924376065]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [prompt_type] == [Parameters].[Parameter 2]&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Prompt Type 2' datatype='integer' name='[Prompt Type 1 (copy)_313281698925002754]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [prompt_type] == [Parameters].[Parameter 3]&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_313281698924376065]' derivation='Sum' name='[sum:Calculation_313281698924376065:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prompt Type 1 (copy)_313281698925002754]' derivation='Sum' name='[sum:Prompt Type 1 (copy)_313281698925002754:qk]' pivot='key' type='quantitative' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='member' level='[none:model:nk]' member='&quot;Platypus2-70B-instruct&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;3_options&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Fact&quot;</bucket>
              <bucket>&quot;Conspiracy&quot;</bucket>
              <bucket>&quot;Controversy&quot;</bucket>
              <bucket>&quot;Misconception&quot;</bucket>
              <bucket>&quot;Stereotype&quot;</bucket>
              <bucket>&quot;Fiction&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='level-members' level='[none:text_response:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yes&quot;</bucket>
              <bucket>&quot;No&quot;</bucket>
              <bucket>&quot;Neither&quot;</bucket>
              <bucket>&quot;YES&quot;</bucket>
              <bucket>&quot;NO&quot;</bucket>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;Bad Output&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]' field-type='quantitative' fold='true' max='270' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]' value='52' />
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]' value='52' />
            <encoding attr='space' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]' field-type='quantitative' max='270' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='45' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 3]' value='Prompt Type 2'>
              <formatted-text>
                <run>Prompt Type 2</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4282872676849365' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='198' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.48276242613792419' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4282872676849365' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='147' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Calculation_313281698924376065:qk] + [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[sum:Prompt Type 1 (copy)_313281698925002754:qk])</rows>
        <cols>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk] / [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk])</cols>
      </table>
      <simple-id uuid='{6F85AC83-948A-4A00-9F30-6DCAF44B841F}' />
    </worksheet>
    <worksheet name='Sheet 2a'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Token probabilities across models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Yes' caption='Show Normalized Probability' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
              <aliases>
                <alias key='false' value='No' />
                <alias key='true' value='Yes' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column caption='Probability' datatype='real' name='[Calculation_410390544238768129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = TRUE&#13;&#10;THEN [normalized_text_response_prob]&#13;&#10;ELSE [text_response_prob]&#13;&#10;END' />
            </column>
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_410390544238768129]' derivation='None' name='[none:Calculation_410390544238768129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_text_response_prob]' role='measure' type='quantitative' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
            <column caption='Text Response Prob' datatype='real' name='[text_response_prob]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='level-members' level='[none:prompt_type:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options/randomized/option_probs&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;A&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;B&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;C&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;D&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
                <format attr='shape' value='circle' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='density-intensity' value='0.029787063598632812' />
                <format attr='has-stroke' value='true' />
                <format attr='density-kernel-size' value='1.3513259887695312' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:Calculation_410390544238768129:qk]</rows>
        <cols>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk] / [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk])</cols>
      </table>
      <simple-id uuid='{5E50813F-5886-44B0-81ED-A72BD824B374}' />
    </worksheet>
    <worksheet name='Sheet 2b'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Token probabilities across prompt types</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Yes' caption='Show Normalized Probability' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
              <aliases>
                <alias key='false' value='No' />
                <alias key='true' value='Yes' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column caption='Probability' datatype='real' name='[Calculation_410390544238768129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = TRUE&#13;&#10;THEN [normalized_text_response_prob]&#13;&#10;ELSE [text_response_prob]&#13;&#10;END' />
            </column>
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_410390544238768129]' derivation='None' name='[none:Calculation_410390544238768129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_text_response_prob]' role='measure' type='quantitative' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
            <column caption='Text Response Prob' datatype='real' name='[text_response_prob]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options/option_probs&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='level-members' level='[none:text_response:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.53773480653762817' />
                <format attr='shape' value='circle' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='density-intensity' value='0.029787063598632812' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:Calculation_410390544238768129:qk]</rows>
        <cols>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok] / [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk])</cols>
      </table>
      <simple-id uuid='{E6D9F038-C4A5-4AD6-A33F-D3CCA19B6242}' />
    </worksheet>
    <worksheet name='Sheet 2c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Token probabilities across categories</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Yes' caption='Show Normalized Probability' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
              <aliases>
                <alias key='false' value='No' />
                <alias key='true' value='Yes' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column caption='Probability' datatype='real' name='[Calculation_410390544238768129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = TRUE&#13;&#10;THEN [normalized_text_response_prob]&#13;&#10;ELSE [text_response_prob]&#13;&#10;END' />
            </column>
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_410390544238768129]' derivation='None' name='[none:Calculation_410390544238768129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_text_response_prob]' role='measure' type='quantitative' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
            <column caption='Text Response Prob' datatype='real' name='[text_response_prob]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='member' level='[none:prompt_type:ok]' member='0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options/randomized/option_probs&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;A&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;B&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;C&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;D&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
                <format attr='shape' value='circle' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='density-intensity' value='0.029787063598632812' />
                <format attr='has-stroke' value='true' />
                <format attr='density-kernel-size' value='1.3513259887695312' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:Calculation_410390544238768129:qk]</rows>
        <cols>([federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk] / [federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk])</cols>
      </table>
      <simple-id uuid='{B02AFDA2-AAC0-42BC-8A38-3BAC68D0EB0A}' />
    </worksheet>
    <worksheet name='Sheet 3a'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Model pair comparison for token responses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <_.fcp.ObjectModelTableType.true...column caption='all_model_responses' datatype='table' name='[__tableau_internal_object_id__].[all_model_responses.csv_291864322FED40BF9B973D6130225C28]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[all_model_responses.csv_291864322FED40BF9B973D6130225C28]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:all_model_responses.csv_291864322FED40BF9B973D6130225C28:qk]' pivot='key' type='quantitative' />
            <column caption='Model 2' datatype='string' name='[model (all_model_responses.csv1)]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model (all_model_responses.csv1)]' derivation='None' name='[none:model (all_model_responses.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response (all_model_responses.csv1)]' derivation='None' name='[none:text_response (all_model_responses.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Text Response (Model 2)' datatype='string' name='[text_response (all_model_responses.csv1)]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='all_model_responses' datatype='integer' name='[__tableau_internal_object_id__].[all_model_responses.csv_291864322FED40BF9B973D6130225C28]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model (all_model_responses.csv1):nk]'>
            <groupfilter function='member' level='[none:model (all_model_responses.csv1):nk]' member='&quot;zephyr-7b-alpha&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='member' level='[none:model:nk]' member='&quot;gpt-4&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='member' level='[none:prompt_type:ok]' member='0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;Bad Output&quot;</bucket>
            </dictionary>
          </manual-sort>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response (all_model_responses.csv1):nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response (all_model_responses.csv1):nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model (all_model_responses.csv1):nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response (all_model_responses.csv1):nk]' value='62' />
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='213' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model (all_model_responses.csv1):nk]' value='Model 2'>
              <formatted-text>
                <run>Model 2</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' value='Model 1'>
              <formatted-text>
                <run>Model 1</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
              <size column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[__tableau_internal_object_id__].[cnt:all_model_responses.csv_291864322FED40BF9B973D6130225C28:qk]' />
              <text column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[__tableau_internal_object_id__].[cnt:all_model_responses.csv_291864322FED40BF9B973D6130225C28:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response (all_model_responses.csv1):nk]</rows>
        <cols>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</cols>
      </table>
      <simple-id uuid='{2443AB70-2820-4CEB-8DA9-0036A7C17410}' />
    </worksheet>
    <worksheet name='Sheet 3b'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Model pair comparison for token probability</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Yes' caption='Show Normalized Probability' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
              <aliases>
                <alias key='false' value='No' />
                <alias key='true' value='Yes' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column caption='Probability' datatype='real' name='[Calculation_410390544238768129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = TRUE&#13;&#10;THEN [normalized_text_response_prob]&#13;&#10;ELSE [text_response_prob]&#13;&#10;END' />
            </column>
            <column caption='Probability_2' datatype='real' name='[Probability (copy)_410390544243863555]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = TRUE&#13;&#10;THEN [normalized_text_response_prob (all_model_responses.csv1)]&#13;&#10;ELSE [text_response_prob (all_model_responses.csv1)]&#13;&#10;END' />
            </column>
            <column caption='Model 2' datatype='string' name='[model (all_model_responses.csv1)]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_410390544238768129]' derivation='None' name='[none:Calculation_410390544238768129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Probability (copy)_410390544243863555]' derivation='None' name='[none:Probability (copy)_410390544243863555:qk]' pivot='key' type='quantitative' />
            <column-instance column='[model (all_model_responses.csv1)]' derivation='None' name='[none:model (all_model_responses.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response (all_model_responses.csv1)]' derivation='None' name='[none:text_response (all_model_responses.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[normalized_text_response_prob (all_model_responses.csv1)]' role='measure' type='quantitative' />
            <column datatype='real' name='[normalized_text_response_prob]' role='measure' type='quantitative' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Text Response (Model 2)' datatype='string' name='[text_response (all_model_responses.csv1)]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
            <column caption='Text Response Prob (All Model Responses.Csv1)' datatype='real' name='[text_response_prob (all_model_responses.csv1)]' role='measure' type='quantitative' />
            <column caption='Text Response Prob' datatype='real' name='[text_response_prob]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model (all_model_responses.csv1):nk]'>
            <groupfilter function='member' level='[none:model (all_model_responses.csv1):nk]' member='&quot;Platypus2-70B-instruct&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='member' level='[none:model:nk]' member='&quot;zephyr-7b-alpha&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='member' level='[none:prompt_type:ok]' member='0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options/option_probs&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response (all_model_responses.csv1):nk]'>
            <groupfilter function='level-members' level='[none:text_response (all_model_responses.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='level-members' level='[none:text_response:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model (all_model_responses.csv1):nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response (all_model_responses.csv1):nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model (all_model_responses.csv1):nk]' value='Model 2'>
              <formatted-text>
                <run>Model 2</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' value='Model 1'>
              <formatted-text>
                <run>Model 1</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:Probability (copy)_410390544243863555:qk]</rows>
        <cols>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:Calculation_410390544238768129:qk]</cols>
      </table>
      <simple-id uuid='{1012A065-01FA-4A55-A4BC-72E524FCB4C1}' />
    </worksheet>
    <worksheet name='Sheet 4a'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sum of option&apos;s token pobabilities across models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_prob]' derivation='None' name='[none:total_prob:qk]' pivot='key' type='quantitative' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
            <column datatype='real' name='[total_prob]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mistral-7B-v0.1&quot;</bucket>
              <bucket>&quot;Mistral-7B-OpenOrca&quot;</bucket>
              <bucket>&quot;zephyr-7b-alpha&quot;</bucket>
              <bucket>&quot;Mistral-7B-Instruct-v0.1&quot;</bucket>
              <bucket>&quot;vicuna-7b-v1.5&quot;</bucket>
              <bucket>&quot;Synthia-7B&quot;</bucket>
              <bucket>&quot;Llama-2-7b-hf&quot;</bucket>
              <bucket>&quot;Llama-2-7b-chat-hf&quot;</bucket>
              <bucket>&quot;WizardMath-7B-V1.0&quot;</bucket>
              <bucket>&quot;pygmalion-7b&quot;</bucket>
              <bucket>&quot;mpt-7b-instruct&quot;</bucket>
              <bucket>&quot;open_llama_7b_v2&quot;</bucket>
              <bucket>&quot;falcon-7b&quot;</bucket>
              <bucket>&quot;falcon-7b-instruct&quot;</bucket>
              <bucket>&quot;RedPajama-INCITE-7B-Instruct&quot;</bucket>
              <bucket>&quot;bloomz-7b1-mt&quot;</bucket>
              <bucket>&quot;RedPajama-INCITE-7B-Base&quot;</bucket>
              <bucket>&quot;open_llama_3b_v2&quot;</bucket>
              <bucket>&quot;gpt-j-6b&quot;</bucket>
              <bucket>&quot;pythia-6.9b-deduped&quot;</bucket>
              <bucket>&quot;dolly-v2-7b&quot;</bucket>
              <bucket>&quot;h2ogpt-oig-oasst1-512-6_9b&quot;</bucket>
              <bucket>&quot;pygmalion-6b&quot;</bucket>
              <bucket>&quot;gpt-neo-2.7B&quot;</bucket>
              <bucket>&quot;opt-iml-max-1.3b&quot;</bucket>
              <bucket>&quot;dolly-v2-3b&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='level-members' level='[none:prompt_type:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options/option_probs&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;A&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;B&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;C&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;D&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:total_prob:qk]' scope='rows' value='Aggregated Probability' />
            <format attr='height' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' value='45' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
                <format attr='shape' value='circle' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='density-intensity' value='0.029787063598632812' />
                <format attr='density-kernel-size' value='1.3513259887695312' />
                <encoding attr='density-color' palette='red_10_0' type='interpolated' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:total_prob:qk]</rows>
        <cols>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</cols>
      </table>
      <simple-id uuid='{13700D45-816F-4B2D-9366-56969FC3A716}' />
    </worksheet>
    <worksheet name='Sheet 4b'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sum of option&apos;s token pobabilities across models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_model_responses' name='federated.1kpqupc08ehcho1dvvsjp1obhoeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpqupc08ehcho1dvvsjp1obhoeq'>
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column datatype='string' name='[model_type]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[model_type]' derivation='None' name='[none:model_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[prompt_type]' derivation='None' name='[none:prompt_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[response_type]' derivation='None' name='[none:response_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[tags]' derivation='None' name='[none:tags:nk]' pivot='key' type='nominal' />
            <column-instance column='[text_response]' derivation='None' name='[none:text_response:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_prob]' derivation='None' name='[none:total_prob:qk]' pivot='key' type='quantitative' />
            <column caption='Prompt Type' datatype='integer' name='[prompt_type]' role='dimension' type='ordinal' />
            <column caption='Response Type' datatype='string' name='[response_type]' role='dimension' type='nominal' />
            <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
            <column caption='Text Response' datatype='string' name='[text_response]' role='dimension' type='nominal' />
            <column datatype='real' name='[total_prob]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mistral-7B-v0.1&quot;</bucket>
              <bucket>&quot;Mistral-7B-OpenOrca&quot;</bucket>
              <bucket>&quot;Mistral-7B-Instruct-v0.1&quot;</bucket>
              <bucket>&quot;vicuna-7b-v1.5&quot;</bucket>
              <bucket>&quot;Synthia-7B&quot;</bucket>
              <bucket>&quot;Llama-2-7b-hf&quot;</bucket>
              <bucket>&quot;pygmalion-7b&quot;</bucket>
              <bucket>&quot;mpt-7b-instruct&quot;</bucket>
              <bucket>&quot;opt-iml-max-1.3b&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]'>
            <groupfilter function='member' level='[none:model_type:nk]' member='&quot;large&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]'>
            <groupfilter function='level-members' level='[none:prompt_type:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]'>
            <groupfilter function='member' level='[none:response_type:nk]' member='&quot;4_options/randomized/option_probs&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]'>
            <groupfilter function='level-members' level='[none:tags:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;A&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;B&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;C&quot;' />
              <groupfilter function='member' level='[none:text_response:nk]' member='&quot;D&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]</column>
            <column>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' value='185' />
            <format attr='title' class='0' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:total_prob:qk]' scope='rows' value='Aggregated Probability' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='subtotal' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:total_prob:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:total_prob:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='70' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:total_prob:qk]</rows>
        <cols>[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]</cols>
      </table>
      <simple-id uuid='{06F2C3CA-CAFE-46BF-B6DC-42103F8074C0}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' show-side-pane='false' source-height='44'>
    <window class='worksheet' name='Sheet 1a'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='116'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
        <edge name='left'>
          <strip size='200'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{504701C4-9851-40F3-AD1B-4A181B0CC1A5}' />
    </window>
    <window class='worksheet' name='Sheet 1b'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
        <edge name='left'>
          <strip size='200'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C8C19D04-7B62-4DEF-8BAE-E72A9278CA4D}' />
    </window>
    <window class='worksheet' name='Sheet 1c'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E0F7C4A1-1AA3-4B9A-8FEF-5186F3532FD8}' />
    </window>
    <window class='worksheet' name='Sheet 1d'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F178EC31-F328-4317-B9E6-FD4CB04B5C72}' />
    </window>
    <window class='worksheet' name='Sheet 1e'>
      <cards>
        <edge name='left'>
          <strip size='126'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='26'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='176'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 2]' type='parameter' />
            <card custom-title='true' mode='list' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{272E1EBE-2B1D-4888-91F5-077857A945A0}' />
    </window>
    <window class='worksheet' name='Sheet 2a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='144'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{748B6A02-CB36-43DF-8358-F8CA2F707891}' />
    </window>
    <window class='worksheet' name='Sheet 2b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{521FF9C9-CE2E-44CB-9356-BB14A13A8FB7}' />
    </window>
    <window class='worksheet' name='Sheet 2c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='144'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{0396FA9F-B036-40C9-9B0A-5F21AA407F75}' />
    </window>
    <window class='worksheet' name='Sheet 3a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' show-all='false' type='filter' />
            <card mode='dropdown' param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model (all_model_responses.csv1):nk]' show-all='false' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E6A4ED04-F9D4-417D-8089-7DABBB27F3E0}' />
    </window>
    <window class='worksheet' name='Sheet 3b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' values='relevant' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='dropdown' param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' show-all='false' type='filter' />
            <card mode='dropdown' param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model (all_model_responses.csv1):nk]' show-all='false' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight field='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C38C452-F975-4458-85EF-D74D634FF445}' />
    </window>
    <window class='worksheet' name='Sheet 4a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='144'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{A17C92CB-F52C-41AF-A8A0-824A40C65143}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 4b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='144'>
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model_type:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:response_type:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:prompt_type:ok]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:tags:nk]' type='filter' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:model:nk]' type='filter' values='relevant' />
            <card param='[federated.1kpqupc08ehcho1dvvsjp1obhoeq].[none:text_response:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E7D329A3-18FB-4B08-92B0-9C25BC11238F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1a' width='192'>
      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
      5GnQ/w8Mns/Fz+jb/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1b' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1c' width='192'>
      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
      ZAWr5dOfFfx/4T5aQjM84rwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1d' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1e' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2a' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2b' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2c' width='192'>
      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
      uXRhao+G/wcWktsf3qFG/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3a' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3b' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4a' width='192'>
      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
      9v8Bbqyfk528SI8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4b' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
